
# A string used to distinguish different Supabase projects on the same host. Defaults to the
# working directory name when running `supabase init`.
project_id = "tnesowutsnxrhqrashok"

[api]
enabled = true
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. public and storage are always included.
schemas = ["public", "storage"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# The maximum number of rows returns from a view, table, or stored procedure. Limits payload size
# for accidental or malicious requests.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# Port used by db diff command to initialize the shadow database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's. Run `SHOW
# server_version;` on the remote database to check.
major_version = 15

[db.pooler]
enabled = false
# Port to use for the local connection pooler.
port = 54329
# The maximum number of connections the pooler will keep open with the database.
# It's recommended to set this to slightly less than your max_connections.
pool_size = 100
# How many connections each user is allocated to use in the pool
pool_mode = "transaction"
# Default pool size per database for users that don't have their own setting
default_pool_size = 20
# Automatically clean up connections that are left idle for too long
idle_timeout = 30

[realtime]
enabled = false
# Bind realtime via either IPv4 or IPv6. (default: IPv6)
# ip_version = "IPv6"
# Limit the maximum number of subscription (default: infinity)
# max_subscriptions = 100

[studio]
enabled = true
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://localhost:54321"
# Defined in the format of a comma-separated list of identifiers into redirect URLs
# separated by a semi-colon. (ie: "identifier1:https://example.com,identifier2:https://example.org")
# These identifier will be transformed into one-time secrets users have to provide.
# internalauth_secret_identifiers = "internalAuthSecretIdentifier:http://localhost:54323"

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
enabled = true
# Port to use for the email testing server web interface.
port = 54324
# Uncomment to expose additional ports for testing user applications that send emails.
# smtp_port = 54325
# pop3_port = 54326

[storage]
enabled = true
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
enabled = true
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Requires enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project.
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Uncomment to customize email template
# [auth.email.template.invite]
# subject = "You have been invited"
# content_path = "./supabase/templates/invite.html"

[auth.sms]
# Allow/disallow new user signups via SMS to your project.
enable_signup = true
# If enabled, users need to confirm their phone number before signing in.
enable_confirmations = false

# Configure one of the supported SMS providers: twilio, messagebird, textlocal, vonage, or dummy.
[auth.sms.twilio]
enabled = false
account_sid = ""
message_service_sid = ""
# DO NOT add your Twilio auth token here. Use the supabase CLI to set it:
# supabase secrets set --env-file ./supabase/.env.local SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN=your-auth-token-here

# Use an external OAuth provider. The full list of providers are: apple, azure, bitbucket,
# discord, facebook, github, gitlab, google, keycloak, linkedin, notion, twitch, twitter,
# slack, spotify, workos, zoom.
[auth.external.apple]
enabled = false
client_id = ""
# DO NOT add your OAuth client secret here. Use the Supabase CLI to set it:
# supabase secrets set --env-file ./supabase/.env.local SUPABASE_AUTH_EXTERNAL_APPLE_SECRET=your-client-secret-here

[auth.external.github]
enabled = false
client_id = ""
# DO NOT add your OAuth client secret here. Use the Supabase CLI to set it:
# supabase secrets set --env-file ./supabase/.env.local SUPABASE_AUTH_EXTERNAL_GITHUB_SECRET=your-client-secret-here

[auth.external.google]
enabled = false
client_id = ""
# DO NOT add your OAuth client secret here. Use the Supabase CLI to set it:
# supabase secrets set --env-file ./supabase/.env.local SUPABASE_AUTH_EXTERNAL_GOOGLE_SECRET=your-client-secret-here

# Configure Supabase Functions
[functions]
enabled = true
# Port to use for Functions.
port = 54323

# Configure Font Awesome
[ai]
enabled = false

# Configure Edge functions
[edge_functions]
enabled = true

# Comma separated list of tables to inspect for Schema changes. empty = all tables
watch_tables = ["employee_sentiment", "sentiment_alert", "sentiments_tags"]

# Configure logging
[log]
# Output logs for Supabase local development
enabled = true
# Log level for the logger [1, 2, 3, 4, 5] where 1 is most verbose
level = 3
# Log format, either "json" or "text"
format = "json"
